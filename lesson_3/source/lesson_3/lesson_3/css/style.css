/* Скидання стилів */
@import url("reset.css");

/* Основні стилі */

/* Анатомія CSS */
/* 
Селектор - запит (пошук) елемента в HTML файлі 
до якого підключений данний CSS-файл 
*/
/*
селектор{
	css параметр; 
	css параметр; 
	css параметр;
	...
	css параметр;
}
*/
/* CSS параметр: */
/* css властивість: значення властивості; */
/* color: red; */

/* ------------------------------------- */

/* Типи селекторів */

/* Тип №0. Селектор зірочка * */
/* Шукаємо (робимо запит), звертаємось 
	до ВСІХ об'єктів на сторінці */

* {
	/* color: red; */
}

/* Тип №1. Селектор тегу */
/* Шукаємо (робимо запит), звертаємось по назві тегу */

/* Приклад */
/* Звертаємось/описуємо (шукаємо, робимо запит) до УСІХ 
	тегів P на сторінці 
*/
p {
	/* color: red; */
}
/* Звертаємось/описуємо (шукаємо, робимо запит) до УСІХ 
	тегів H1 на сторінці 
*/
h1 {
	/* color: green; */
}
/* Звертаємось/описуємо (шукаємо, робимо запит) до УСІХ 
	тегів A на сторінці 
*/
a {
	/* color: blue; */
}

/* Тип №2. Селектор класу */
/* Шукаємо, звертаємось (робимо запит) по назві класу */
/* спочатку КРАПКА потім ім'я класу */

/* Приклад */
/* Звертаємось/описуємо 
	(шукаємо, робимо запит) до УСІХ 
	тегів з класом lesson на сторінці 
*/
.lesson {
	/* color: red; */
}
/* Звертаємось/описуємо 
	(шукаємо, робимо запит) до УСІХ 
	тегів з класом title на сторінці 
*/
.title {
	/* color: green; */
}

/* Тип №3. Селектор ID */
/* Шукаємо (робимо запит по назві ID) */
/* спочатку # потім значення ID */

/* Звертаємось/описуємо 
	(шукаємо, робимо запит) ТІЛЬКИ до  
	одного (унікального) об'єкта з ID some-id
*/
#some-id {
	/* color: yellowgreen; */
}

/* Тип №4. Селектор атрибутів */
/* Шукає сполечення літер tle в трибутах class */
[class*="tle"] {
	/* color: red; */
}

/* КОМБІНАЦІЇ СЕЛЕКТОРІВ */

/* Усі DIV але лише з класом text 
	НІЯКИХ ПРОБІЛІВ МІЖ СЕЛЕКТОРАМИ!
*/

div.text {
	/* color: blue; */
}

/* Усі теги але лише з 
	класами page__text та text ОДНОЧАСНО 
	НІЯКИХ ПРОБІЛІВ МІЖ СЕЛЕКТОРАМИ!
*/
.page__text.text {
	/* color: yellowgreen; */
}

/* Звертаємось відразу 
	до кількох класів 
*/

/*
.title {
	color: red;
}
.text {
	color: red;
}
*/

/* АБО */
.title,
.text,
li {
	/* color: red; */
}

/* КАСКАДНІСТЬ (ВКЛАДЕНІСТЬ) СЕЛЕКТОРІВ */
/* ОБОВ'ЯЗКОВО ПРОБІЛ МІЖ ЕЛЕМЕНТАМИ */

/* Усі теги A але тільки в середені об'єктів з класом lesson
	рівень вкладеності значення немає
 */
.lesson a {
	/* color: blue; */
}
.lesson p {
	/* color: red; */
}
/* ... */

/* Усі об'єкти з класом blue-text в середені 
	об'єктів з класом lesson.
	Рівень вкладеності значення немає
*/
.lesson .blue-text {
	/* color: blue; */
}

/* Усі об'єкти в середені 
об'єктів з класом lesson */
.lesson * {
	/* color: green; */
}

/* Усі теги P першого рівня (безпосередні) 
	в середені об'єктів з класом lesson 
*/
.lesson > p {
	/* color: red; */
}

/*
Усі теги P які знаходяться 
далі по коду після об'єктів з класом lesson
та мають той самий рівень вкладеності
*/
.lesson ~ p {
	/* color: red; */
}

/*
Тег P який знаходяться беспосередньо 
далі по коду після об'єктів з класом lesson
та мають той самий рівень вкладеності
*/
.lesson + p {
	/* color: red; */
}

/* -------- ПРІОРИТЕТ СЕЛЕКТОРІВ ------------ */

/*
	Основні правила формування пріоритетів: 
	1) У випадку рівнозначних селекторів більший 
		пріоритет буде у останього (нижчого) по коду.
		(Селектор класу та селектор атрибуту - рівнозначні)
	2) Більший пріоритет завжди буде у селектора,
		який звужує (уточює, конкретизує) пошук (запит).
	3) Пріоритет у рядкових (inline) стилів 
		(атрибут style="") вищий ніж у стилів 
		з окремого файлу (наприклад style.css)
	4) Флаг !important перезаписує пріоритет (не рекомендується)
		При використанні, ви точно маєте розуміти що робите
*/

/* 
	Селектор класу та селектор атрибуту - рівнозначні 
	Працює правило №'1
*/
[class*="tex"] {
	/* color: blue; */
}
.text {
	/* color: red; */
}

/* Правило №2 */

/* Найвищий приорітет */
#some-id {
	color: yellowgreen;
}

/* Вищий ніж селектор тегу */
.text {
	/* color: green; */
}

/* Вищий ніж зірочка */
p {
	/* color: blue; */
}

/* Найнижчий приорітет */
* {
	/* color: red; */
}

/* 
Приорітет комбінацій випливає з правила №2 
Чим точніше запит (комбінація) тим вона приорітетніше
*/

p.text {
	/* color: blue; */
}
.text {
	/* color: green; */
}
p {
	/* color: red; */
}

/* Популярні питання */

/* 
В чому різниця між .page__text.text та .page__text .text?
*/

/* Звертаємось до об'єктів 
	у якого ОДНОЧАСНО є клас 
	page__text та клас text 
*/
.page__text.text {
}

/* Звертаємось до об'єктів з класом text,
	які вкладені в об'єкти з класом page__text */
.page__text .text {
}
